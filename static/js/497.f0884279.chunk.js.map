{"version":3,"file":"static/js/497.f0884279.chunk.js","mappings":"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","sources":["components/authentication/ui-components/card.js","components/authentication/forms/loginForm.js","components/authentication/views/login.jsx"],"sourcesContent":["import React from 'react'\r\n\r\n\r\n/**\r\n * \r\n * @param {*} props - from the views\r\n * @returns The card used to wrap the forms content\r\n */\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card shadow rounded-4 text-center\" style={{ width: \"24rem\", minHeight: '14rem' }}>\r\n        <div className=\"card-body\" >\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * This is the Login Form Schema to control the user inputs\r\n */\r\n\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid').required('is required'),\r\n    password: Yup.string()\r\n        .min(8, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('is required'),\r\n});\r\n\r\n/**\r\n * Login Form with inputs validator\r\n * @param {*} onSubmit - Form data\r\n * @returns {Object} - {email: string, password: string, loginCheck: Boolean}\r\n */\r\n\r\nexport const LoginValidationSchema = ({ onSubmit }) => {\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    loginCheck: false,\r\n                }}\r\n                validationSchema={LoginFormSchema}\r\n                onSubmit={async (values, actions) => {\r\n                    await new Promise((r) => setTimeout(r, 1000));\r\n                    onSubmit(values);\r\n                    console.log(values);\r\n                    actions.resetForm({});\r\n                    actions.setSubmitting(false);\r\n                }}\r\n            >\r\n                {({ errors, touched, isSubmitting }) => (\r\n                    <Form>\r\n                        <div className=\"d-grid gap-3 p-2\">\r\n                            <div className=\"form-floating\">\r\n                                <Field\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    className={`form-control shadow-none rounded-4 ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                                <label htmlFor=\"email\" >\r\n                                    <p className={touched.email && errors.email ? \"text-danger\" : \"text-body\"}>{`Email address ${touched.email && errors.email ? errors.email : \"\"}`}</p>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-floating\">\r\n                                <Field\r\n                                    type={\"password\"}\r\n                                    name=\"password\"\r\n                                    className={`form-control shadow-none rounded-4 ${touched.password && errors.password  ? \"is-invalid\" : \"\"}`}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <label htmlFor=\"password\" >\r\n                                    <p className={touched.password && errors.password  ? \"text-danger\" : \"text-body\"}>{`Password ${touched.password && errors.password  ?  errors.password : \"Password\"}`}</p>\r\n                                </label>\r\n                            </div>\r\n                            <div className='d-flex justify-content-between p-1'>\r\n                                <div className='d-flex '>\r\n                                    <Field type=\"checkbox\" name='loginCheck' />\r\n                                    <label className=\"form-check-label ms-2\" htmlFor=\"loginCheck\">\r\n                                        Remember me\r\n                                    </label>\r\n                                </div>\r\n                                <Link to=\"/authentication/forgotpass\" style={{ color: 'black', textDecoration: 'none' }}>Forgot Password?</Link>\r\n                            </div>\r\n                            <button className='btn rounded-3 p-2 fw-bold' type=\"submit\" disabled={isSubmitting} style={{ backgroundColor: '#6456ff', color: 'white' }}>{isSubmitting ? <><span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>&nbsp;<strong>Signing In</strong></> : <strong>Sign In</strong>}</button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Card } from '../ui-components/card.js'\r\nimport { LoginValidationSchema } from '../forms/loginForm';\r\nimport { RiLoginCircleLine } from 'react-icons/ri';\r\n\r\n\r\n// -------------------------------[ LOGIN VIEW ]------------------------------- //\r\n\r\n/**\r\n * \r\n * @returns Login view\r\n */\r\n\r\nconst LoginCopy = () => {\r\n    const [credentials, setCreadentials] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (credentials) {\r\n            const c = JSON.stringify(credentials, null, 2);\r\n            localStorage.setItem('user', c);\r\n            alert(c);\r\n            navigate(\"/dashboard/default\");\r\n        }\r\n    }, [credentials, navigate]);\r\n\r\n    return (\r\n        <Card>\r\n            <h2 className=\"card-title fw-bold pt-3\">\r\n                <div className='d-flex justify-content-center '>\r\n                    <RiLoginCircleLine className='fs-1 me-1' />\r\n                    LOGIN\r\n                </div>\r\n            </h2>\r\n            <h3 className='mt-5 fw-bold' style={{ color: '#6456ff' }}>Hello, Have a good day!</h3>\r\n            <h6 className='mt-3 mb-4 text-muted'>Enter your credentials to continue.</h6>\r\n            <LoginValidationSchema onSubmit={(e) => setCreadentials(e)} />\r\n            <hr className=\" border border-secondary-subtle opacity-50\" />\r\n            <Link to=\"/authentication/register\" style={{ color: 'black', textDecoration: 'none' }}>Do not have an account?</Link>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginCopy;"],"names":["Card","props","className","style","width","minHeight","children","LoginFormSchema","Yup","shape","email","required","password","min","max","LoginValidationSchema","onSubmit","initialValues","loginCheck","validationSchema","values","actions","Promise","r","setTimeout","console","log","resetForm","setSubmitting","errors","touched","isSubmitting","type","name","placeholder","htmlFor","to","color","textDecoration","disabled","backgroundColor","role","useState","credentials","setCreadentials","navigate","useNavigate","useEffect","c","JSON","stringify","localStorage","setItem","alert","e"],"sourceRoot":""}